# ===========================================
# Pipeline CI para Selenium Screenplay Cucumber 2.0
# Autor: Oscar Julian Duque Ramos
# ===========================================

trigger:
  branches:
    include:
      - main
      - develop
      - feature/*

# Usa un agente de Ubuntu (Linux)
pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_OPTS: "-Dmaven.test.failure.ignore=false"

steps:
  # 1️⃣ Checkout del código
  - task: Checkout@1
    displayName: "Checkout del repositorio"

  # 2️⃣ Configurar JDK 17 (ajusta si tu proyecto usa otra versión)
  - task: UseJavaVersion@1
    inputs:
      versionSpec: '17'
      distribution: 'temurin'
    displayName: "Configurar JDK 17"

  # 3️⃣ Compilar y ejecutar pruebas con Maven
  - script: |
      mvn clean verify -U
    displayName: "Compilar y ejecutar pruebas (Maven verify)"

  # 4️⃣ Publicar resultados JUnit/Cucumber
  - task: PublishTestResults@2
    displayName: "Publicar resultados de pruebas"
    inputs:
      testResultsFiles: '**/surefire-reports/*.xml'
      testRunTitle: 'Resultados Selenium Screenplay'

  # 5️⃣ Publicar reportes HTML como artefactos
  - task: PublishBuildArtifacts@1
    displayName: "Publicar reportes HTML"
    inputs:
      PathtoPublish: 'target/site'
      ArtifactName: 'Reports'
      publishLocation: 'Container'

  # 6️⃣ (Opcional) Guardar reportes Cucumber si están en carpeta específica
  - task: PublishBuildArtifacts@1
    displayName: "Publicar reportes Cucumber"
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: 'target/cucumber-reports'
      ArtifactName: 'CucumberReports'
      publishLocation: 'Container'
